CREATE TABLE "GTIM_CUSTOMER_ALL" 
   (	"CUSTOMER_ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"NAME" VARCHAR2(50) NOT NULL ENABLE, 
	"RFC" VARCHAR2(50) NOT NULL ENABLE, 
	"ADDRESS" VARCHAR2(100), 
	"PHONE" VARCHAR2(50), 
	"CREATION_DATE" TIMESTAMP (6) WITH TIME ZONE, 
	"CREATED_BY" VARCHAR2(50), 
	"LAST_UPDATE_DATE" TIMESTAMP (6) WITH TIME ZONE, 
	"LAST_UPDATE_BY" VARCHAR2(50),
	PRIMARY KEY ("CUSTOMER_ID")
   ) ;
   
   CREATE OR REPLACE EDITIONABLE TRIGGER "GTIM_CUSTOMER_ALL_BIU" 
    BEFORE INSERT OR UPDATE ON "GTIM_CUSTOMER_ALL"
    FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREATION_DATE := CURRENT_TIMESTAMP;
        :NEW.CREATED_BY := NVL(wwv_flow.g_user, USER);
    END IF;
    :NEW.LAST_UPDATE_DATE := CURRENT_TIMESTAMP;
    :NEW.LAST_UPDATE_BY := NVL(wwv_flow.g_user, USER);
END;
CREATE TABLE "GTIM_TEMPLATE_ALL" 
   (	
    "TEMPLATE_ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY 
       MINVALUE 1 MAXVALUE 9999999999999999999999999999 
       INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE NOKEEP NOSCALE NOT NULL ENABLE, 
    "CUSTOMER_ID" NUMBER NOT NULL ENABLE, 
    "NAME" VARCHAR2(100) NOT NULL ENABLE, 
    "DESCRIPTION" VARCHAR2(500), 
    "STATUS" VARCHAR2(20) DEFAULT 'DRAFT' NOT NULL ENABLE, 
    "VERSION" VARCHAR2(10) DEFAULT '1.0' NOT NULL ENABLE, 
    "IS_ACTIVE" CHAR(1) DEFAULT 'Y' NOT NULL ENABLE, 
    "TEMPLATE_TYPE" VARCHAR2(30),  
    "CREATION_DATE" TIMESTAMP (6) WITH TIME ZONE, 
    "CREATED_BY" VARCHAR2(50), 
    "LAST_UPDATE_DATE" TIMESTAMP (6) WITH TIME ZONE, 
    "LAST_UPDATE_BY" VARCHAR2(50),
    PRIMARY KEY ("TEMPLATE_ID"),
    CONSTRAINT "FK_TEMPLATE_CUSTOMER" FOREIGN KEY ("CUSTOMER_ID")
        REFERENCES "GTIM_CUSTOMER_ALL" ("CUSTOMER_ID") ENABLE,
    CONSTRAINT "CHK_TEMPLATE_STATUS" CHECK ("STATUS" IN ('DRAFT','ACTIVE','ARCHIVED','DISABLED')) ENABLE,
    CONSTRAINT "CHK_TEMPLATE_ACTIVE" CHECK ("IS_ACTIVE" IN ('Y','N')) ENABLE
   );

COMMENT ON TABLE "GTIM_TEMPLATE_ALL" IS 'Plantillas maestras para el sistema de validación de archivos';

CREATE OR REPLACE EDITIONABLE TRIGGER "GTIM_TEMPLATE_ALL_BIU" 
    BEFORE INSERT OR UPDATE ON "GTIM_TEMPLATE_ALL"
    FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREATION_DATE := CURRENT_TIMESTAMP;
        :NEW.CREATED_BY := NVL(wwv_flow.g_user, USER);
        
        
        IF :NEW.NAME IS NULL THEN
            :NEW.NAME := 'TEMPLATE_' || TO_CHAR(SYSDATE, 'YYYYMMDD_HH24MI');
        END IF;
    END IF;
    
  
    IF UPDATING AND :NEW.STATUS = 'ACTIVE' AND :OLD.STATUS != 'ACTIVE' THEN
        :NEW.VERSION := TO_CHAR(TO_NUMBER(NVL(:OLD.VERSION, '0')) + 1, '9.9');
    END IF;
    
    :NEW.LAST_UPDATE_DATE := CURRENT_TIMESTAMP;
    :NEW.LAST_UPDATE_BY := NVL(wwv_flow.g_user, USER);
END;

CREATE TABLE "GTIM_CUSTOMER_DETAIL_ALL" 
   (	"CUSTOMER_DETAIL_ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"EMAIL" VARCHAR2(50) NOT NULL ENABLE, 
	"USER" VARCHAR2(50) NOT NULL ENABLE, 
	"START_DATE" DATE, 
	"END_DATE" DATE, 
	"CREATION_DATE" TIMESTAMP (6) WITH TIME ZONE, 
	"CREATED_BY" VARCHAR2(50), 
	"LAST_UPDATE_DATE" TIMESTAMP (6) WITH TIME ZONE, 
	"LAST_UPDATE_BY" VARCHAR2(50),
	PRIMARY KEY ("CUSTOMER_DETAIL_ID")
	CONSTRAINT "GTIM_CUSTOMER_ALL" FOREIGN KEY ("CUSTOMER_ID")
	REFERENCES "CUSTOMER_ID" (CUSTOMER_ID)
   ) ;
   
   CREATE OR REPLACE EDITIONABLE TRIGGER "GTIM_CUSTOMER_DETAIL_ALL_BIU" 
    BEFORE INSERT OR UPDATE ON "GTIM_CUSTOMER_DETAIL_ALL"
    FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREATION_DATE := CURRENT_TIMESTAMP;
        :NEW.CREATED_BY := NVL(wwv_flow.g_user, USER);
    END IF;
    :NEW.LAST_UPDATE_DATE := CURRENT_TIMESTAMP;
    :NEW.LAST_UPDATE_BY := NVL(wwv_flow.g_user, USER);
END;

CREATE TABLE "GTIM_SHEET_ALL" 
   (	
    "SHEET_ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY 
       MINVALUE 1 MAXVALUE 9999999999999999999999999999 
       INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE NOKEEP NOSCALE NOT NULL ENABLE, 
    "TEMPLATE_ID" NUMBER NOT NULL ENABLE, 
    "NAME" VARCHAR2(100) NOT NULL ENABLE, 
    "STATUS" VARCHAR2(20) DEFAULT 'ACTIVE' NOT NULL ENABLE, 
    "ORDER_POSITION" NUMBER NOT NULL ENABLE, 
    "HEADER_POSITION" NUMBER, 
    "CREATION_DATE" TIMESTAMP (6) WITH TIME ZONE, 
    "CREATED_BY" VARCHAR2(50), 
    "LAST_UPDATE_DATE" TIMESTAMP (6) WITH TIME ZONE, 
    "LAST_UPDATE_BY" VARCHAR2(50),
    PRIMARY KEY ("SHEET_ID"),
    CONSTRAINT "FK_SHEET_TEMPLATE" FOREIGN KEY ("TEMPLATE_ID")
        REFERENCES "GTIM_TEMPLATE_ALL" ("TEMPLATE_ID") ENABLE,
    CONSTRAINT "CHK_SHEET_STATUS" CHECK ("STATUS" IN ('ACTIVE','INACTIVE','ARCHIVED')) ENABLE
   );

COMMENT ON TABLE "GTIM_SHEET_ALL" IS 'Tabla de hojas/plantillas para el sistema de validación';

CREATE OR REPLACE EDITIONABLE TRIGGER "GTIM_SHEET_ALL_BIU" 
    BEFORE INSERT OR UPDATE ON "GTIM_SHEET_ALL"
    FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREATION_DATE := CURRENT_TIMESTAMP;
        :NEW.CREATED_BY := NVL(wwv_flow.g_user, USER);
        
    
        IF :NEW.ORDER_POSITION IS NULL THEN
            SELECT NVL(MAX(ORDER_POSITION), 0) + 1 
            INTO :NEW.ORDER_POSITION
            FROM GTIM_SHEET_ALL
            WHERE TEMPLATE_ID = :NEW.TEMPLATE_ID;
        END IF;
    END IF;
    :NEW.LAST_UPDATE_DATE := CURRENT_TIMESTAMP;
    :NEW.LAST_UPDATE_BY := NVL(wwv_flow.g_user, USER);
END;

CREATE TABLE "GTIM_COLUMN_ALL" (
    "COLUMN_ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE,
    "SHEET_ID" NUMBER,
    "NAME" VARCHAR2(255) NOT NULL,
    "STATUS" VARCHAR2(50),
    "ORDER" NUMBER,
    "CREATION_DATE" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    "CREATED_BY" VARCHAR2(255),
    "LAST_UPDATE_DATE" TIMESTAMP,
    "LAST_UPDATE_BY" VARCHAR2(255),
    PRIMARY KEY ("COLUMN_ID"),
    CONSTRAINT "FK_COLUMN_SHEET" FOREIGN KEY ("SHEET_ID") REFERENCES "GTIM_SHEET_ALL"("SHEET_ID")
);


ALTER TABLE "GTIM_COLUMN_ALL" ADD PRIMARY KEY ("COLUMN_ID")
    USING INDEX ENABLE;

    CREATE OR REPLACE EDITIONABLE TRIGGER "GTIM_COLUMN_ALL_BIU" 
    BEFORE INSERT OR UPDATE ON GTIM_COLUMN_ALL
    FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREATION_DATE := CURRENT_TIMESTAMP;
        :NEW.CREATED_BY := NVL(wwv_flow.g_user, USER);
    END IF;
    :NEW.LAST_UPDATE_DATE := CURRENT_TIMESTAMP;
    :NEW.LAST_UPDATE_BY := NVL(wwv_flow.g_user, USER);
END;



CREATE TABLE "GTIM_ERROR_ALL" (
    "ERROR_ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE,
    "NAME" VARCHAR2(100) NOT NULL,
    "DESCRIPTION" VARCHAR2(255),
    "TYPE" VARCHAR2(50),
    "CREATION_DATE" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    "CREATED_BY" VARCHAR2(255),
    "LAST_UPDATE_DATE" TIMESTAMP,
    "LAST_UPDATE_BY" VARCHAR2(255),
    PRIMARY KEY ("ERROR_ID")
);


ALTER TABLE "GTIM_ERROR_ALL" ADD PRIMARY KEY ("ERROR_ID")
    USING INDEX ENABLE;

    CREATE OR REPLACE EDITIONABLE TRIGGER "GTIM_ERROR_ALL_BIU" 
    BEFORE INSERT OR UPDATE ON GTIM_ERROR_ALL
    FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREATION_DATE := CURRENT_TIMESTAMP;
        :NEW.CREATED_BY := NVL(wwv_flow.g_user, USER);
    END IF;
    :NEW.LAST_UPDATE_DATE := CURRENT_TIMESTAMP;
    :NEW.LAST_UPDATE_BY := NVL(wwv_flow.g_user, USER);
END;


CREATE TABLE "GTIM_VALUE_LIST_ALL" (
    "VALUE_LIST_ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE,
    "CUSTOMER_ID" NUMBER,
    "NAME" VARCHAR2(255) NOT NULL,
    "VALUE" VARCHAR2(255),
    "CREATION_DATE" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    "CREATED_BY" VARCHAR2(255),
    "LAST_UPDATE_DATE" TIMESTAMP,
    "LAST_UPDATE_BY" VARCHAR2(255),
    PRIMARY KEY ("VALUE_LIST_ID"),
    CONSTRAINT "FK_VALUE_LIST_CUSTOMER" FOREIGN KEY ("CUSTOMER_ID") REFERENCES "GTIM_CUSTOMER_ALL"("CUSTOMER_ID")
);

ALTER TABLE "GTIM_VALUE_LIST_ALL" ADD PRIMARY KEY ("VALUE_LIST_ID")
    USING INDEX ENABLE;

    CREATE OR REPLACE EDITIONABLE TRIGGER "GTIM_VALUE_LIST_ALL_BIU" 
    BEFORE INSERT OR UPDATE ON GTIM_VALUE_LIST_ALL
    FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREATION_DATE := CURRENT_TIMESTAMP;
        :NEW.CREATED_BY := NVL(wwv_flow.g_user, USER);
    END IF;
    :NEW.LAST_UPDATE_DATE := CURRENT_TIMESTAMP;
    :NEW.LAST_UPDATE_BY := NVL(wwv_flow.g_user, USER);
END;


CREATE TABLE "GTIM_RULES_ALL" 
   (	
    "RULE_ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY 
       MINVALUE 1 MAXVALUE 9999999999999999999999999999 
       INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE NOKEEP NOSCALE NOT NULL ENABLE, 
    "VALUE_LIST_ID" NUMBER, 
    "COLUMN_ID" NUMBER NOT NULL ENABLE, 
    "DATA_TYPE" VARCHAR2(30) NOT NULL ENABLE,  
    "NAME" VARCHAR2(100) NOT NULL ENABLE, 
    "LENGTH" NUMBER, 
    "IS_REQUIRED" CHAR(1) DEFAULT 'N' NOT NULL ENABLE, 
    "CREATION_DATE" TIMESTAMP (6) WITH TIME ZONE, 
    "CREATED_BY" VARCHAR2(50), 
    "LAST_UPDATE_DATE" TIMESTAMP (6) WITH TIME ZONE, 
    "LAST_UPDATE_BY" VARCHAR2(50),
    PRIMARY KEY ("RULE_ID"),
    CONSTRAINT "FK_RULES_VALUELIST" FOREIGN KEY ("VALUE_LIST_ID")
        REFERENCES "GTIM_VALUE_LIST_ALL" ("VALUE_LIST_ID") ENABLE,
    CONSTRAINT "FK_RULES_COLUMN" FOREIGN KEY ("COLUMN_ID")
        REFERENCES "GTIM_COLUMN_ALL" ("COLUMN_ID") ENABLE,
    CONSTRAINT "CHK_RULES_REQUIRED" CHECK ("IS_REQUIRED" IN ('Y','N')) ENABLE
   );

COMMENT ON TABLE "GTIM_RULES_ALL" IS 'Tabla de reglas de validación para columnas de plantillas';

CREATE OR REPLACE EDITIONABLE TRIGGER "GTIM_RULES_ALL_BIU" 
    BEFORE INSERT OR UPDATE ON "GTIM_RULES_ALL"
    FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREATION_DATE := CURRENT_TIMESTAMP;
        :NEW.CREATED_BY := NVL(wwv_flow.g_user, USER);
    END IF;
    :NEW.LAST_UPDATE_DATE := CURRENT_TIMESTAMP;
    :NEW.LAST_UPDATE_BY := NVL(wwv_flow.g_user, USER);
END;



CREATE TABLE "GTIM_LOAD_VALIDATION_ALL" 
   (	
    "LOAD_ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY 
       MINVALUE 1 MAXVALUE 9999999999999999999999999999 
       INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE NOKEEP NOSCALE NOT NULL ENABLE, 
    "TEMPLATE_ID" NUMBER NOT NULL ENABLE, 
    "CUSTOMER_ID" NUMBER NOT NULL ENABLE, 
    "SHEET_ID" NUMBER, 
    "FILE_BLOB" BLOB, 
    "FILE_NAME" VARCHAR2(255), 
    "FILE_MIMETYPE" VARCHAR2(100), 
    "FILE_CHARSET" VARCHAR2(50), 
    "STATUS" VARCHAR2(20) DEFAULT 'PENDING' NOT NULL ENABLE, 
    "PROCESSED_ROWS" NUMBER DEFAULT 0, 
    "ERROR_COUNT" NUMBER DEFAULT 0, 
    "CREATION_DATE" TIMESTAMP (6) WITH TIME ZONE, 
    "CREATED_BY" VARCHAR2(50), 
    "LAST_UPDATE_DATE" TIMESTAMP (6) WITH TIME ZONE, 
    "LAST_UPDATED_BY" VARCHAR2(50),
    PRIMARY KEY ("LOAD_ID"),
    CONSTRAINT "FK_LOADVAL_TEMPLATE" FOREIGN KEY ("TEMPLATE_ID")
        REFERENCES "GTIM_TEMPLATE_ALL" ("TEMPLATE_ID") ENABLE,
    CONSTRAINT "FK_LOADVAL_CUSTOMER" FOREIGN KEY ("CUSTOMER_ID")
        REFERENCES "GTIM_CUSTOMER_ALL" ("CUSTOMER_ID") ENABLE,
    CONSTRAINT "FK_LOADVAL_SHEET" FOREIGN KEY ("SHEET_ID")
        REFERENCES "GTIM_SHEET_ALL" ("SHEET_ID") ENABLE,
    CONSTRAINT "CHK_LOADVAL_STATUS" CHECK ("STATUS" IN ('PENDING','PROCESSING','COMPLETED','FAILED','ARCHIVED')) ENABLE
   );

COMMENT ON TABLE "GTIM_LOAD_VALIDATION_ALL" IS 'Registro de cargas de archivos para validación';

CREATE OR REPLACE EDITIONABLE TRIGGER "GTIM_LOAD_VALIDATION_ALL_BIU" 
    BEFORE INSERT OR UPDATE ON "GTIM_LOAD_VALIDATION_ALL"
    FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREATION_DATE := CURRENT_TIMESTAMP;
        :NEW.CREATED_BY := NVL(wwv_flow.g_user, USER);
        
        
        IF :NEW.FILE_NAME IS NULL THEN
            RAISE_APPLICATION_ERROR(-20001, 'El nombre de archivo es requerido');
        END IF;
    END IF;
    
  
    IF UPDATING AND :NEW.STATUS = 'PROCESSING' THEN
        :NEW.LAST_UPDATE_DATE := CURRENT_TIMESTAMP;
        :NEW.LAST_UPDATED_BY := NVL(wwv_flow.g_user, USER);
    END IF;
END;




CREATE TABLE "GTIM_PROCESSING_TABLE_LOG_ALL" (
    "PROCESS_ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
    "LOAD_ID" NUMBER,
    "ERROR_ID" NUMBER,
    "SHEET_ID" NUMBER,
    "STATUS" VARCHAR2(50),
    "ROW1"  VARCHAR2(100), 
    "ROW2"  VARCHAR2(100),
    "ROW3"  VARCHAR2(100), 
    "ROW4"  VARCHAR2(100), 
    "ROW5"  VARCHAR2(100),
    "ROW6"  VARCHAR2(100), 
    "ROW7"  VARCHAR2(100), 
    "ROW8"  VARCHAR2(100), 
    "ROW9"  VARCHAR2(100), 
    "ROW10" VARCHAR2(100),
    "ROW11" VARCHAR2(100), 
    "ROW12" VARCHAR2(100), 
    "ROW13" VARCHAR2(100), 
    "ROW14" VARCHAR2(100), 
    "ROW15" VARCHAR2(100),
    "ROW16" VARCHAR2(100), 
    "ROW17" VARCHAR2(100), 
    "ROW18" VARCHAR2(100), 
    "ROW19" VARCHAR2(100), 
    "ROW20" VARCHAR2(100),
    "ROW21" VARCHAR2(100), 
    "ROW22" VARCHAR2(100), 
    "ROW23" VARCHAR2(100), 
    "ROW24" VARCHAR2(100), 
    "ROW25" VARCHAR2(100),
    "ROW26" VARCHAR2(100), 
    "ROW27" VARCHAR2(100), 
    "ROW28" VARCHAR2(100), 
    "ROW29" VARCHAR2(100), 
    "ROW30" VARCHAR2(100),
    "ROW31" VARCHAR2(100), 
    "ROW32" VARCHAR2(100), 
    "ROW33" VARCHAR2(100), 
    "ROW34" VARCHAR2(100), 
    "ROW35" VARCHAR2(100),
    "ROW36" VARCHAR2(100), 
    "ROW37" VARCHAR2(100), 
    "ROW38" VARCHAR2(100), 
    "ROW39" VARCHAR2(100), 
    "ROW40" VARCHAR2(100),
    "ROW41" VARCHAR2(100), 
    "ROW42" VARCHAR2(100), 
    "ROW43" VARCHAR2(100), 
    "ROW44" VARCHAR2(100), 
    "ROW45" VARCHAR2(100),
    "ROW46" VARCHAR2(100), 
    "ROW47" VARCHAR2(100), 
    "ROW48" VARCHAR2(100), 
    "ROW49" VARCHAR2(100), 
    "ROW50" VARCHAR2(100),
   
    "CREATION_DATE" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    "CREATED_BY" VARCHAR2(255),
    "LAST_UPDATE_DATE" TIMESTAMP,
    "LAST_UPDATE_BY" VARCHAR2(255),

    CONSTRAINT "FK_PROCESS_LOAD" FOREIGN KEY ("LOAD_ID") REFERENCES "GTIM_LOAD_VALIDATION_ALL"("LOAD_ID"),
    CONSTRAINT "FK_PROCESS_ERROR" FOREIGN KEY ("ERROR_ID") REFERENCES "GTIM_ERROR_ALL"("ERROR_ID"),
    CONSTRAINT "FK_PROCESS_SHEET" FOREIGN KEY ("SHEET_ID") REFERENCES "GTIM_TAB_ALL"("SHEET_ID")
);

CREATE OR REPLACE TRIGGER "GTIM_PROCESSING_TABLE_LOG_AUDIT_BIU"
BEFORE INSERT OR UPDATE ON "GTIM_PROCESSING_TABLE_LOG_ALL"
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW."CREATION_DATE" := CURRENT_TIMESTAMP;
        :NEW."CREATED_BY" := NVL(wwv_flow.g_user, USER);
    END IF;
    :NEW."LAST_UPDATE_DATE" := CURRENT_TIMESTAMP;
    :NEW."LAST_UPDATE_BY" := NVL(wwv_flow.g_user, USER);
END;
/



